{
  "name": "team",
  "baseUrl": "/api/team/",
  "endpoints": [
    {
      "name": "service",
      "title": "get service API details",
      "description": "Returns the document you're looking at right now.",
      "method": "get",
      "contentType": "application/json",
      "url": "service",
      "arguments": []
    },
    {
      "name": "count",
      "title": "count the documents in the service-specific collection",
      "description": "Returns a count of documents in the service-specific collection",
      "contentType": "application/json",
      "method": "get",
      "url": "/count",
      "arguments": []
    },
    {
      "name": "get",
      "title": "get one or more documents",
      "description": "Returns one or more documents meeting the query parameters.  If no querystring parameters are given, all documents will be returned. When getting all mazes, stubbed data will be returned for performance reasons.",
      "method": "get",
      "contentType": "application/json",
      "url": "/get",
      "arguments": [
        {
          "name": "?key=val",
          "title": "querystring argument",
          "description": "key: Any valid object field name (lowercase). val: The desired value to match on (case-sensitive). ",
          "type": "Optional, Any"
        },
        {
          "name": "&stub=true",
          "title": "querystring argument",
          "description": "Including stub=true will instruct the service to return a data stub (when available).",
          "type": "Optional, Any"
        }
      ]
    },
    {
      "name": "delete",
      "title": "deletes a document",
      "description": "Deletes a document with the given docId from the service-specific collection.",
      "method": "delete",
      "contentType": "application/json",
      "url": "/delete/{docId}",
      "arguments": [
        {
          "name": "docId",
          "title": "The ID of the document to delete.",
          "description": "Usually a GUID, though maze documents have custom ID in the following format: 'height:width:challege:seed' (e.g. 3:5:10:TestMaze:SampleSeed)",
          "type": "string"
        }
      ]
    },
    {
      "name": "insert",
      "title": "upload a document",
      "description": "Inserts the JSON object request.body into to the service-specific collection.",
      "method": "put",
      "contentType": "application/json",
      "url": "/insert",
      "arguments": []
    },
    {
      "name": "update",
      "title": "update a document",
      "description": "Updates the service-specific collection document with the JSON object found in request.body.",
      "method": "put",
      "contentType": "application/json",
      "url": "/update",
      "arguments": []
    },

    {
      "name": "count/botCode",
      "title": "count the number of bot code versions",
      "description": "Returns a count of the number of bot code versions for the given botId",
      "method": "get",
      "contentType": "application/json",
      "url": "/count/botCode",
      "arguments": [
        {
          "name": "botId",
          "title": "botId",
          "description": "The id of the bot the code is assigned to",
          "type": "string - Query Parameter [OPTIONAL]"
        }
      ]
    },
    {
      "name": "get/botCode",
      "title": "get bot code",
      "description": "Gets the code for the given bot id.  By default, latest version is returned. Use ?version=<version-num> or ?version=all to get other versions.",
      "method": "put",
      "contentType": "application/json",
      "url": "/get/botCode",
      "arguments": [
        {
          "name": "botId",
          "title": "botId",
          "description": "The id of the bot the code is assigned to. e.g /get/botcode?botId=123abc",
          "type": "string - query parameter [REQUIRED]"
        },
        {
          "name": "versionNum",
          "title": "Version Number",
          "description": "The bot code version. e.g /get/botcode?botId=123abc?version=1",
          "type": "string - query parameter [OPTIONAL]"
        }
      ]
    },
    {
      "name": "insert/botCode",
      "title": "inserts new bot code version",
      "description": "Inserts a new, automatically incremented version of the bot code included in JSON document body",
      "method": "put",
      "contentType": "application/json",
      "url": "/insert/botCode",
      "arguments": []
    },
    {
      "name": "update/botCode",
      "title": "updates bot code",
      "description": "Updates the latest version of bot code with the contents of JSON document body",
      "method": "put",
      "contentType": "application/json",
      "url": "/update/botCode/{botId}",
      "arguments": []
    },
    {
      "name": "delete/botCode",
      "title": "deletes a bot code version",
      "description": "Deletes the given bot code version from the given botId - cannot be undone!",
      "method": "delete",
      "contentType": "application/json",
      "url": "/delete/botCode/{botId}/{versionNum}",
      "arguments": [
        {
          "name": "botId",
          "title": "botId",
          "description": "The id of the bot the code is assigned to",
          "type": "string - URL Path Parameter"
        },
        {
          "name": "versionNum",
          "title": "Version Number",
          "description": "The bot code version to delete",
          "type": "number - URL Path Parameter"
        }
      ]
    },
    {
      "name": "live",
      "title": "check if service is online",
      "description": "Liveness probe for cluster monitoring.",
      "contentType": "application/json",
      "method": "get",
      "url": "/probes/live",
      "arguments": []
    },
    {
      "name": "ready",
      "title": "check if service is ready for use",
      "description": "Readiness probe for cluster monitoring.",
      "contentType": "application/json",
      "method": "get",
      "url": "/probes/ready",
      "arguments": []
    }
  ]
}
